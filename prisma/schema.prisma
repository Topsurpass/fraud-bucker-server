generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String        @id @default(uuid())
  firstname      String
  lastname       String
  email          String        @unique
  phone          String
  jobTitle       String
  role           Role          @default(USER)
  password       String
  refreshToken   String?       @db.VarChar(500)
  resetToken       String?
  resetTokenExpiry DateTime? 
  transactionsCreated Transaction[] @relation("TransactionCreatedBy")
  merchantsCreated    Merchant[]     @relation("MerchantCreatedBy")
  channelsCreated     Channel[]      @relation("ChannelCreatedBy")
  analystsCreated     FraudContact[] @relation("FraudContactCreatedBy")
  
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Transaction {
  id          String   @id @default(uuid())
  merchantId  String
  merchant    Merchant  @relation(fields: [merchantId], references: [id])
  amount      Decimal
  type        String
  channelId   String
  channel     Channel   @relation(fields: [channelId], references: [id])
  
  analystId   String
  analyst     User      @relation("TransactionCreatedBy", fields: [analystId], references: [id])
  
  status      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Merchant {
  id          String       @id @default(uuid())
  name        String
  transactions Transaction[]
  fraudContacts FraudContact[]
  
  createdById String
  createdBy   User         @relation("MerchantCreatedBy", fields: [createdById], references: [id])
  
  createdAt   DateTime     @default(now())
}

model FraudContact {
  id          String      @id @default(uuid())
  merchantId  String
  merchant    Merchant    @relation(fields: [merchantId], references: [id])
  name        String
  phone       String
  email       String
  
  createdById String
  createdBy   User        @relation("FraudContactCreatedBy", fields: [createdById], references: [id])
}

model Channel {
  id          String       @id @default(uuid())
  name        String
  transactions Transaction[]
  
  createdById String
  createdBy   User         @relation("ChannelCreatedBy", fields: [createdById], references: [id])
  
  createdAt   DateTime     @default(now())
}
